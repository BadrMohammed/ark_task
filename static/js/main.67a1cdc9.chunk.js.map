{"version":3,"sources":["Redux/Actions/types.js","Redux/Reducers/methods.js","Redux/Reducers/HomeReducer.js","Redux/Reducers/index.js","ReusableCompnents/Header.js","Components/Home/HomeCard.js","Redux/Actions/GeneralAction.js","ReusableCompnents/GeneralFunctions.js","Redux/Actions/HomeActions.js","Redux/Actions/Request.js","ReusableCompnents/StaticKeys.js","ReusableCompnents/Loader.js","Components/Home/Home.js","Components/Home/Details.js","App.js","reportWebVitals.js","index.js"],"names":["UPDATE_HOME_PROPS","MERGE_HOME_PROPS","DELETE_HOME_PROPS","CLEAR_HOME_STATE","updateProps","state","action","newState","i","payload","length","dotProp","set","prop","value","mergeProps","merge","deleteProps","delete","INITIAL_STATE","repositoryObj","isLoading","repositoryArray","totalItems","hasMore","page","queryItem","order","sort","q","repo_details","HomeReducer","type","general","combineReducers","HomeR","Header","history","fetch_Repositries","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","style","cursor","NavLink","e","push","NavbarText","Row","Col","xl","locale","selected","Date","onChange","date","toISOString","split","onChangeDate","HomeCard","repository","key","Card","preventDefault","lg","md","sm","xs","top","width","height","borderTopLeftRadius","borderBottomLeftRadius","src","owner_photo","alt","CardBody","CardTitle","tag","name","CardSubtitle","owner_userName","CardText","description","Button","stars","marginLeft","issues","showNotificationMessage","title","swal","text","query","dispatch","undefined","url","obect","Object","keys","forEach","index","getQueryString","axios","create","baseURL","headers","get","then","response","data","items","result","count","full_name","owner","avatar_url","login","stargazers_count","open_issues","catch","err","console","log","finally","Loader","active","spinner","Spinner","fadeSpeed","Home","renderCard","props","dataLength","next","fetchMoreData","loader","endMessage","textAlign","map","sx","this","Component","connect","actions","Details","checkHasDetails","renderText","label","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReduxThunk","App","basename","process","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67a1cdc9.chunk.js","sourcesContent":["// // Home\r\nexport const UPDATE_HOME_PROPS = \"UPDATE_HOME_PROPS\";\r\nexport const MERGE_HOME_PROPS = \"MERGE_HOME_PROPS\";\r\nexport const DELETE_HOME_PROPS = \"DELETE_HOME_PROPS\";\r\nexport const CLEAR_HOME_STATE = \"CLEAR_HOME_STATE\";\r\n","import dotProp from \"dot-prop-immutable\";\r\n\r\nexport const updateProps = (state, action) => {\r\n  let newState = state;\r\n  for (let i = 0; i < action.payload.length; i++) {\r\n    newState = dotProp.set(\r\n      newState,\r\n      action.payload[i].prop,\r\n      action.payload[i].value\r\n    );\r\n  }\r\n  return newState;\r\n};\r\n\r\nexport const mergeProps = (state, action) => {\r\n  let newState = state;\r\n\r\n  for (let i = 0; i < action.payload.length; i++) {\r\n    newState = dotProp.merge(\r\n      newState,\r\n      action.payload[i].prop,\r\n      action.payload[i].value\r\n    );\r\n  }\r\n  return newState;\r\n};\r\n\r\nexport const deleteProps = (state, action) => {\r\n  let newState = state;\r\n  for (let i = 0; i < action.payload.length; i++) {\r\n    newState = dotProp.delete(newState, action.payload[i].prop);\r\n  }\r\n  return newState;\r\n};\r\n","import {\r\n  UPDATE_HOME_PROPS,\r\n  MERGE_HOME_PROPS,\r\n  DELETE_HOME_PROPS,\r\n  CLEAR_HOME_STATE,\r\n} from \"../Actions/types\";\r\nimport * as general from \"./methods\";\r\n\r\nconst INITIAL_STATE = {\r\n  repositoryObj: {\r\n    isLoading: false,\r\n    repositoryArray: [],\r\n    totalItems: 0,\r\n    hasMore: true,\r\n    page: 1,\r\n  },\r\n  queryItem: { order: \"desc\", sort: \"stars\", q: \"created:>2019-10-22\" },\r\n  repo_details: null,\r\n};\r\n\r\nconst HomeReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_HOME_PROPS: {\r\n      return general.updateProps(state, action);\r\n    }\r\n    case MERGE_HOME_PROPS: {\r\n      return general.mergeProps(state, action);\r\n    }\r\n    case DELETE_HOME_PROPS: {\r\n      return general.deleteProps(state, action);\r\n    }\r\n    case CLEAR_HOME_STATE: {\r\n      let newState = state;\r\n      newState = INITIAL_STATE;\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default HomeReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport HomeReducer from \"./HomeReducer\";\r\n\r\nexport default combineReducers({\r\n  HomeR: HomeReducer,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  Col,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { UPDATE_HOME_PROPS } from \"../Redux/Actions/types\";\r\nconst Header = ({ history, general, queryItem, fetch_Repositries }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const onChangeDate = (date) => {\r\n    let value = \"created:>\" + date.toISOString().split(\"T\")[0];\r\n    general(\r\n      [\r\n        {\r\n          prop: \"queryItem.q\",\r\n          value: value,\r\n        },\r\n\r\n        {\r\n          prop: \"repositoryObj.page\",\r\n          value: 1,\r\n        },\r\n      ],\r\n      UPDATE_HOME_PROPS\r\n    );\r\n    fetch_Repositries(queryItem, 1, value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand href=\"/\">Github Repository</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem style={{ cursor: \"pointer\" }}>\r\n              <NavLink onClick={(e) => history.push(\"/\")}>Home</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <NavbarText>\r\n            <Row>\r\n              <Col xl={12}>\r\n                <DatePicker\r\n                  locale=\"en\"\r\n                  className=\"form-control\"\r\n                  selected={new Date(queryItem.q)}\r\n                  onChange={(date) => onChangeDate(date)}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardTitle,\r\n  Button,\r\n  CardText,\r\n} from \"reactstrap\";\r\nimport { UPDATE_HOME_PROPS } from \"../../Redux/Actions/types\";\r\n\r\nconst HomeCard = ({ repository, key, history, general }) => {\r\n  const onView = (e) => {\r\n    e.preventDefault();\r\n    general([{ prop: \"repo_details\", value: repository }], UPDATE_HOME_PROPS);\r\n    history.push(\"/repository_detail\");\r\n  };\r\n  return (\r\n    <Card className=\"home_card ml-5 mr-5\" key={key} onClick={onView}>\r\n      <Row className=\"home_card_row\">\r\n        <Col xl={2} lg={2} md={4} sm={6} xs={12}>\r\n          <img\r\n            top\r\n            width=\"200\"\r\n            height=\"200\"\r\n            style={{\r\n              borderTopLeftRadius: \"10px\",\r\n              borderBottomLeftRadius: \"10px\",\r\n            }}\r\n            src={repository.owner_photo}\r\n            alt=\"\"\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CardBody>\r\n            <CardTitle tag=\"h5\">{repository.name}</CardTitle>\r\n            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n              {repository.owner_userName}\r\n            </CardSubtitle>\r\n            <CardText>{repository.description}</CardText>\r\n\r\n            <Button className=\"home_btn\">{repository.stars + \" stars \"}</Button>\r\n\r\n            <Button style={{ marginLeft: \"5px\" }} className=\"home_btn\">\r\n              {repository.issues + \" issues \"}\r\n            </Button>\r\n\r\n            <span style={{ marginLeft: \"5px\" }}>\r\n              {\"Submitted 30 days ago by \" + repository.owner_userName}\r\n            </span>\r\n          </CardBody>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HomeCard;\r\n","export const general = (payload, key) => {\r\n  return { type: key, payload };\r\n};\r\n","import swal from \"sweetalert\";\r\n\r\nexport const getQueryString = (obect) => {\r\n  let query = \"\";\r\n\r\n  Object.keys(obect).forEach(function (key, index) {\r\n    if (index === 0) {\r\n      query += \"?\";\r\n    } else {\r\n      query += \"&\";\r\n    }\r\n    query += key + \"=\" + obect[key];\r\n  });\r\n  return query;\r\n};\r\n\r\nexport const showNotificationMessage = (title) => {\r\n  swal({\r\n    text: title,\r\n  });\r\n};\r\n","import { Request } from \"./Request\";\r\nimport {\r\n  getQueryString,\r\n  showNotificationMessage,\r\n} from \"../../ReusableCompnents/GeneralFunctions\";\r\nimport { UPDATE_HOME_PROPS, MERGE_HOME_PROPS } from \"../Actions/types\";\r\n\r\n//list the most starred Github repos that were created in the last 30 days.\r\nexport const fetch_Repositries = (query, page, date) => (dispatch) => {\r\n  if (page === 1) {\r\n    dispatch({\r\n      type: UPDATE_HOME_PROPS,\r\n      payload: [{ prop: \"repositoryObj.isLoading\", value: true }],\r\n    });\r\n  }\r\n  query.page = page;\r\n  if (date !== undefined) {\r\n    query.q = date;\r\n  }\r\n  let query_str = getQueryString(query);\r\n  let url = \"/search/repositories\" + query_str;\r\n\r\n  Request()\r\n    .get(url)\r\n    .then((response) => {\r\n      if (response.data.items !== undefined) {\r\n        if (response.data.items.length > 0) {\r\n          let result = [];\r\n          for (var count = 0; count < response.data.items.length; count++) {\r\n            result.push({\r\n              name: response.data.items[count].full_name,\r\n              description: response.data.items[count].description,\r\n              owner_photo: response.data.items[count].owner.avatar_url,\r\n              owner_userName: response.data.items[count].owner.login,\r\n              stars: response.data.items[count].stargazers_count,\r\n              issues: response.data.items[count].open_issues,\r\n            });\r\n          }\r\n\r\n          dispatch({\r\n            type: MERGE_HOME_PROPS,\r\n            payload: [{ prop: \"repositoryObj.repositoryArray\", value: result }],\r\n          });\r\n        } else {\r\n          showNotificationMessage(\"No Result Found\");\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type: UPDATE_HOME_PROPS,\r\n          payload: [{ prop: \"repositoryObj.hasMore\", value: false }],\r\n        });\r\n      }\r\n      dispatch({\r\n        type: UPDATE_HOME_PROPS,\r\n        payload: [{ prop: \"repositoryObj.isLoading\", value: false }],\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally();\r\n};\r\n","import { API_URL } from \"../../ReusableCompnents/StaticKeys\";\r\nimport axios from \"axios\";\r\nexport const Request = () => {\r\n  return axios.create({\r\n    baseURL: API_URL,\r\n    headers: {},\r\n  });\r\n};\r\n","export const API_URL = \"https://api.github.com\";\r\n","import LoadingOverlay from \"react-loading-overlay\";\r\nimport { Spinner } from \"reactstrap\";\r\nconst Loader = ({ isLoading }) => {\r\n  return (\r\n    <div className=\"loader_div\">\r\n      <LoadingOverlay\r\n        active={isLoading}\r\n        spinner={\r\n          <Spinner\r\n            style={{ width: \"3rem\", height: \"3rem\", color: \"#007bff\" }}\r\n            type=\"grow\"\r\n          />\r\n        }\r\n        fadeSpeed={500}\r\n        text=\"\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../ReusableCompnents/Header\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport HomeCard from \"./HomeCard\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Redux/Actions/index\";\r\nimport Loader from \"../../ReusableCompnents/Loader\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { UPDATE_HOME_PROPS } from \"../../Redux/Actions/types\";\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    this.props.fetch_Repositries(this.props.queryItem, 1);\r\n  }\r\n  renderCard = () => {\r\n    const { repositoryObj, general, history } = this.props;\r\n\r\n    if (repositoryObj.repositoryArray.length > 0) {\r\n      return (\r\n        <InfiniteScroll\r\n          dataLength={repositoryObj.repositoryArray.length}\r\n          next={this.fetchMoreData}\r\n          hasMore={repositoryObj.hasMore}\r\n          loader={<h4>Loading...</h4>}\r\n          endMessage={\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>Yay! You have seen it all</b>\r\n            </p>\r\n          }\r\n        >\r\n          {repositoryObj.repositoryArray.map((repository, index) => {\r\n            return (\r\n              <Col xl={12} lg={12} md={12} sm={12} sx={12} className=\"mt-3\">\r\n                <HomeCard\r\n                  repository={repository}\r\n                  key={index}\r\n                  history={history}\r\n                  general={general}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </InfiniteScroll>\r\n      );\r\n    }\r\n  };\r\n\r\n  fetchMoreData = () => {\r\n    const { general, fetch_Repositries, queryItem, repositoryObj } = this.props;\r\n    general(\r\n      [{ prop: \"repositoryObj.page\", value: repositoryObj.page + 1 }],\r\n      UPDATE_HOME_PROPS\r\n    );\r\n    fetch_Repositries(queryItem, repositoryObj.page + 1);\r\n  };\r\n\r\n  render() {\r\n    const { repositoryObj, history, general, queryItem, fetch_Repositries } =\r\n      this.props;\r\n    return repositoryObj.isLoading === true ? (\r\n      <Loader isLoading={repositoryObj.isLoading} />\r\n    ) : (\r\n      <div className=\"container_div\">\r\n        <Row>\r\n          <Col xl={12} lg={12} md={12} sm={12} sx={12}>\r\n            <Header\r\n              history={history}\r\n              general={general}\r\n              queryItem={queryItem}\r\n              fetch_Repositries={fetch_Repositries}\r\n            />\r\n          </Col>\r\n\r\n          {this.renderCard()}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ HomeR }) => {\r\n  return { repositoryObj: HomeR.repositoryObj, queryItem: HomeR.queryItem };\r\n};\r\nexport default connect(mapStateToProps, actions)(Home);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Header from \"../../ReusableCompnents/Header\";\r\nimport * as actions from \"../../Redux/Actions/index\";\r\nimport { showNotificationMessage } from \"../../ReusableCompnents/GeneralFunctions\";\r\nclass Details extends Component {\r\n  componentDidMount() {\r\n    this.checkHasDetails();\r\n  }\r\n\r\n  checkHasDetails = () => {\r\n    const { repo_details, history } = this.props;\r\n    if (repo_details === null) {\r\n      showNotificationMessage(\"No Details to view\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  renderText = (label, value) => {\r\n    return (\r\n      <Row>\r\n        <Col className=\"mt-1\">\r\n          <span>{label} : </span>\r\n          <span>{value}</span>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n  render() {\r\n    const { repo_details, history, general, queryItem, fetch_Repositries } =\r\n      this.props;\r\n    return (\r\n      <div className=\"container_div\">\r\n        <Row>\r\n          <Col xl={12} lg={12} md={12} sm={12} sx={12}>\r\n            <Header\r\n              history={history}\r\n              general={general}\r\n              queryItem={queryItem}\r\n              fetch_Repositries={fetch_Repositries}\r\n            />\r\n          </Col>\r\n\r\n          {repo_details !== null ? (\r\n            <Row className=\"ml-5 mr-5 mt-5 mb-5\">\r\n              <Col className=\"text-center\" xl={2}>\r\n                <img\r\n                  src={repo_details.owner_photo}\r\n                  alt=\"logo\"\r\n                  width=\"200\"\r\n                  height=\"200\"\r\n                  className=\"img-thumbnail img-fluid\"\r\n                />\r\n                <p className=\"mt-2\">{repo_details.owner_userName}</p>\r\n              </Col>\r\n              <Col>\r\n                <Row className=\"mt-3\">\r\n                  {this.renderText(\"Repository name\", repo_details.name)}\r\n                  {this.renderText(\r\n                    \"Repository description\",\r\n                    repo_details.description\r\n                  )}\r\n                  {this.renderText(\r\n                    \"Number of stars for the repo.\",\r\n                    repo_details.stars\r\n                  )}\r\n                  {this.renderText(\r\n                    \"Number of issues for the repo.\",\r\n                    repo_details.issues\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          ) : null}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ HomeR }) => {\r\n  return { repo_details: HomeR.repo_details, queryItem: HomeR.queryItem };\r\n};\r\nexport default connect(mapStateToProps, actions)(Details);\r\n","import React, { Component } from \"react\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducers from \"../src/Redux/Reducers/index\";\r\nimport Home from \"./Components/Home/Home\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Details from \"./Components/Home/Details\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  {},\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? compose(\r\n        applyMiddleware(ReduxThunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n          window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      )\r\n    : compose(applyMiddleware(ReduxThunk))\r\n);\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/repository_detail\" exact component={Details} />\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./app.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}